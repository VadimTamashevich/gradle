plugins.apply(ReadWriteTaskPlugin)

// transitive dependencies conflict case
dependencies {
    implementation("com.googlecode.jsontoken:jsontoken:1.0")
}

tasks.register("print-task").configure {
    group = "custom"

    //println("start test task")

    doFirst {
        println("create test task")
        println("task in process")
    }

    doLast {
        println("test task finished")
    }

    // enabled = false
}

tasks.named("print-task").get().configure {
    //assemble.dependsOn("print-task")
    //it.shouldRunAfter("check")
    //assemble.finalizedBy("print-task")
}

class CheckImportTask extends DefaultTask {

    @Input
    String rejectedValue

    @TaskAction
    void task() {
        project.fileTree("./").files.each { it ->
            if (it.text.contains(rejectedValue) && it.name != "build.gradle") {
                throw new BuildCancelledException("build was cancelled because project " +
                        "$project.name contains rejected value $rejectedValue in file ${it.name}")
            }
        }
    }
}

project.tasks.register("check-rejected-values", CheckImportTask) {
    group = 'custom'
    description = "check build source files with rejected value"
    rejectedValue = "@Data"
}
